# Copy this file and name it .env in your local environment

# execute the following command to generate a secret key:
#    python manage.py shell -c 'from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())'
# copy the value here
SECRET_KEY=<generated value, see command above>

# Django
DEBUG=false
DJANGO_ALLOWED_HOSTS=localhost
DJANGO_CORS_ORIGIN_WHITELIST=http://localhost:8000,http://localhost:3000
DJANGO_SUPERUSER_USERNAME=<username>
DJANGO_SUPERUSER_EMAIL=<email>
DJANGO_SUPERUSER_PASSWORD=<password>
DJANGO_CSRF_COOKIE_SECURE=true
DJANGO_SECURE_SSL_REDIRECT=true
DJANGO_SESSION_COOKIE_SECURE=true
DJANGO_RECAPTCHA_SECRET_KEY=<reCAPTCHA secret key>
DJANGO_EMAIL_BACKEND=<django.core.mail.backends.console.EmailBackend/django.core.mail.backends.smtp.EmailBackend>
DJANGO_EMAIL_HOST=<smtp host>
DJANGO_EMAIL_PORT=<smtp port>
DJANGO_FROM_EMAIL_DEFAULT=<default from email for all outgoing emails>
DJANGO_FEEDBACK_EMAIL_DEFAULT=<default feedback recipient email>

# Django image database connection details
DB_NAME=<database name>
DB_USER=<username>
DB_PASSWORD=<password>
DB_HOST=<db/localhost/other hostname or IP of database server>
DB_PORT=<5432/other port of database server>

# Postgres image env variables
POSTGRES_DB=<database name>
POSTGRES_USER=<username>
POSTGRES_PASSWORD=<password>

# Redis
REDIS_HOST=<redis/localhost/other hostname or IP of redis server>
REDIS_PORT=<6379/other port of database server>

# Node
NODE_ENV=<development/test/production>
NODE_OPTIONS=<openssl-legacy-provider>
FONTAWESOME_PACKAGE_TOKEN=<fontawesome package token>

# React
REACT_APP_API_HOST=<localhost:8000/other hostname:port or IP:port of Django server>
REACT_APP_BASE_MAP=<base map wms url>
REACT_APP_MAP_STYLE=<map styling url>
REACT_APP_REPLAY_THE_DAY=<replay the day url>
REACT_APP_ROUTE_PLANNER=<route planner url>
REACT_APP_ROUTE_PLANNER_KEY=<route planner auth key>
REACT_APP_GEOCODER_HOST=<geocoder url>
REACT_APP_GEOCODER_API_AUTH_KEY=<api auth key>
REACT_APP_RECAPTCHA_CLIENT_ID=<reCAPTCHA client ID>
REACT_APP_SURVEY_LINK=<exit survey link>
REACT_APP_REPORT_WMS_LAYER=<report wms layer url>
REACT_APP_BCEID_REGISTER_URL=<URL for BCeID basic registration page>
REACT_APP_FROM_EMAIL=<default from address for outgoing emails>
REACT_APP_LEGACY_URL=<legacy URL for the old DriveBC site>

# API
DRIVEBC_INLAND_FERRY_API_BASE_URL=<inland ferry api url>
DRIVEBC_IMAGE_API_BASE_URL=<image api url>
DRIVEBC_IMAGE_BASE_URL=<base url for local images>
DRIVEBC_IMAGE_PROXY_URL=<image proxy url>
DRIVEBC_WEBCAM_API_BASE_URL=<camera api url>
DRIVEBC_OPEN_511_API_BASE_URL=<open511 api url>
DRIVEBC_DIT_API_BASE_URL=<CARS api url>
DRIVEBC_ROUTE_PLANNER_API_BASE_URL=<route planner url>
DRIVEBC_ROUTE_PLANNER_API_AUTH_KEY=<route planner auth key>
DRIVEBC_WEATHER_API_BASE_URL=<weather api base url>
DRIVEBC_WEATHER_API_TOKEN_URL=<weather api token url>
DRIVEBC_WEATHER_AREAS_API_BASE_URL=<weather areas api base url>
DRIVEBC_WEATHER_FORECAST_API_BASE_URL=<weather forecast api base url>
WEATHER_CLIENT_ID=<weather client id>
WEATHER_CLIENT_SECRET=<weather client secret>

# TESTS
# optional: set to config.test.DbcRunner to user test runner allowing for
# skipping db creation entirely
TEST_RUNNER=config.test.DbcRunner

# OPTIONAL: include, set to true, to trigger optional backend code supporting
# dev in a docker environment (e.g., URLs for local image serving)
DEV_ENVIRONMENT=true

# Common component Keycloak with BCeID
BCEID_URL=<url for login server, for dev https://dev.loginproxy.gov.bc.ca/auth/realms/standard>
BCEID_CLIENT_ID=<see Password Manager Pro>
BCEID_SECRET=<see Password Manager Pro>

# # Closure phrase ids for production environment
# CLOSED_PHRASE_IDS=18,20,22,23,25,30,32,182,307,309,310

# Closure phrase ids for test environment
CLOSED_PHRASE_IDS=18, 20, 22, 23, 26, 30, 32, 182, 320, 325, 327

# Border crossing delays
DRIVEBC_BORDER_CROSSING_LANE_DELAY_BASE_URL=<border crossing lane delay api url>
