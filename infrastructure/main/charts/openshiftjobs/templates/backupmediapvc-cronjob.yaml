{{- $deploymentTag := .Values.image.tag | default .Chart.AppVersion -}}
{{- $deploymentTime := now | date "2006-01-02 15:04:05.000000" -}}
{{- if .Values.cronjobs.backupmediapvc.enabled }}
apiVersion: batch/v1
kind: CronJob
metadata:
  name: {{ template "app.fullname" . }}-{{ .Values.cronjobs.backupmediapvc.name }}
  labels: {{ include "app.labels" . | nindent 4 }}
  annotations: 
    vault.hashicorp.com/agent-inject: 'true'
    vault.hashicorp.com/agent-inject-secret-secrets.env: {{ .Values.global.vault.licenceplate }}-{{ .Values.global.vault.environment}}/{{ .Values.vault.secretName }}
    vault.hashicorp.com/agent-inject-template-secrets.env: |
      {{`{{- with secret `}}"{{ .Values.global.vault.licenceplate }}-{{ .Values.global.vault.environment }}/{{ .Values.vault.secretName }}"{{` }}
      {{- range $key, $value := .Data.data }}
      export {{$key}}="{{$value}}"
      {{- end }}
      {{- end `}} }}
    vault.hashicorp.com/agent-inject-token: 'false'
    vault.hashicorp.com/agent-pre-populate-only: 'true'
    vault.hashicorp.com/auth-path: {{ .Values.vault.authPath }}
    vault.hashicorp.com/namespace: platform-services
    vault.hashicorp.com/role: {{ .Values.global.vault.licenceplate }}-{{ .Values.global.vault.environment}}

spec:
  schedule: {{ .Values.cronjobs.backupmediapvc.schedule }}
  concurrencyPolicy: Replace
  suspend: false
  jobTemplate:
    spec:
      template:
        metadata:
          creationTimestamp: null
          annotations:
            vault.hashicorp.com/agent-inject: 'true'
            vault.hashicorp.com/agent-inject-secret-secrets.env: {{ .Values.global.vault.licenceplate }}-{{ .Values.global.vault.environment}}/{{ .Values.vault.secretName }}
            vault.hashicorp.com/agent-inject-template-secrets.env: |
              {{`{{- with secret `}}"{{ .Values.global.vault.licenceplate }}-{{ .Values.global.vault.environment }}/{{ .Values.vault.secretName }}"{{` }}
              {{- range $key, $value := .Data.data }}
              export {{$key}}="{{$value}}"
              {{- end }}
              {{- end `}} }}
            vault.hashicorp.com/agent-inject-token: 'false'
            vault.hashicorp.com/agent-pre-populate-only: 'true'
            vault.hashicorp.com/auth-path: {{ .Values.vault.authPath }}
            vault.hashicorp.com/namespace: platform-services
            vault.hashicorp.com/role: {{ .Values.global.vault.licenceplate }}-{{ .Values.global.vault.environment}}
        spec:
          serviceAccountName: {{ .Values.global.vault.licenceplate }}-vault
          volumes:
            - name: django-media
              persistentVolumeClaim:
                claimName: {{ .Values.cronjobs.backupmediapvc.deployment.volumes.media  }}
          containers:
            - resources:
                requests:
                  cpu: {{ .Values.cronjobs.backupmediapvc.deployment.resources.requests.cpu  }}
                  memory: {{ .Values.cronjobs.backupmediapvc.deployment.resources.requests.memory  }}
                limits:
                  memory: {{ .Values.cronjobs.backupmediapvc.deployment.resources.limits.memory  }}
              name: {{ include "app.fullname" . }}-{{ .Values.cronjobs.backupmediapvc.name }}
              command:
                - sh
                - '-c'
              args:
                - . /vault/secrets/secrets.env && /scripts/backupmediapvc.sh
              volumeMounts:
                - name: django-media
                  mountPath: /app/media
              env:
                - name: DEPLOYMENT_TAG
                  value: {{ $deploymentTag | quote }}
                - name: DEPLOYMENT_TIME
                  value: {{ $deploymentTime | quote }}
                - name: RELEASE
                  value: {{ .Values.global.release }}
                {{- range $key, $value := .Values.cronjobs.analyzeuploadlogs.deployment.env.variables }}
                - name: {{ $key }}
                  value: {{ $value | quote }}
                {{- end }}
              imagePullPolicy: IfNotPresent
              image: {{ .Values.image.repository  }}:{{ .Values.image.tag  }}
              securityContext:
                seccompProfile:
                  type: 'RuntimeDefault'
                runAsNonRoot: true
                allowPrivilegeEscalation: false
                capabilities:
                  drop:
                    - all
                  add:
                    - NET_BIND_SERVICE
          restartPolicy: Never
  successfulJobsHistoryLimit: 1
  failedJobsHistoryLimit: 1
{{- end }}