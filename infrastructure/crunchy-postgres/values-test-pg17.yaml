fullnameOverride: test-drivebc-db

#crunchyImage: artifacts.developer.gov.bc.ca/bcgov-docker-local/crunchy-postgres-gis:ubi8-15.2-3.3-0

postgresVersion: 17
postGISVersion: '3.4'

instances:
  name: ha # high availability
  replicas: 1
  dataVolumeClaimSpec:
    storage: 2Gi
    storageClassName: netapp-block-standard
  requests:
    cpu: 50m
    memory: 300Mi
  limits:
    memory: 512Mi
  replicaCertCopy:
    requests:
      cpu: 1m
      memory: 16Mi
    limits:
      memory: 32Mi

# If we need to restore the cluster from a backup, we need to set the following values
# assuming restore from repo2 (s3), adjust as needed if your S3 repo is different
dataSource:
  enabled: false
  # should have the same name and contain the same keys as the pgbackrest secret
  secretName: s3-pgbackrest
  repo:
    name: repo2
    path: "/db/dbbackup"
    s3UriStyle: path
    s3:
      bucket: ""
      endpoint: ""
      region: "ca-central-1" #this can be whatever if using BC Gov object storage
    stanza: db

pgBackRest:
  image: # it's not necessary to specify an image as the images specified in the Crunchy Postgres Operator will be pulled by default
  retention: "2" # Set to 2 days for PVC backups
  # If retention-full-type set to 'count' then the oldest backups will expire when the number of backups reach the number defined in retention
  # If retention-full-type set to 'time' then the number defined in retention will take that many days worth of full backups before expiration
  retentionFullType: time
  repos:
    schedules:
      full: 0 8 * * *
      incremental: 0 0,4,12,16,20 * * *
    volume:
      accessModes: "ReadWriteOnce"
      storage: 2Gi
      storageClassName: netapp-file-backup
  repoHost:
    requests:
      cpu: 5m
      memory: 16Mi
    limits:
      memory: 128Mi
  sidecars:
    pgbackrest:
      requests:
        cpu: 5m
        memory: 128Mi
      limits:
        memory: 256Mi
    pgbackrestConfig:
      requests:
        cpu: 1m
        memory: 16Mi
      limits:
        memory: 32Mi
  s3:
    enabled: true
    retention: "7" # Set to 7 days for S3 storage.
    retentionFullType: time
    createS3Secret: true #Will create the secret if it doesn't already exist. NOTE: Once the secret is set, you must change it in OpenShift.
    # the s3 secret name 
    s3Secret: test-drivebc-db-s3-pgbackrest
    # the path start with /, it will be created under bucket if it doesn't exist
    s3Path: "/db/dbbackup"
    # s3UriStyle is host or path
    s3UriStyle: path
    # bucket specifies the S3 bucket to use,
    bucket: ""
    # endpoint specifies the S3 endpoint to use.
    endpoint: ""
    # region specifies the S3 region to use. If your S3 storage system does not
    # use "region", fill this in with a random value.
    region: "ca-central-1"
    # key is the S3 key. This is stored in a Secret.
    # Please DO NOT push this value to GitHub
    key: "s3keyValue"
    # keySecret is the S3 key secret. This is stored in a Secret.
    # Please DO NOT push this value to GitHub
    keySecret: "s3SecretValue"
    # setting the below to be one plus of the default schedule
    # to avoid conflicts
    fullSchedule: "0 9 * * *"
    incrementalSchedule: "30 0,4,12,16,20 * * *"
  manual:
    repoName: repo1

standby:
  enabled: false
  repo: repo2

patroni:
  postgresql:
    pg_hba: "host all all 0.0.0.0/0 md5"
    parameters:
      shared_buffers: 16MB # default is 128MB; a good tuned default for shared_buffers is 25% of the memory allocated to the pod
      wal_buffers: "64kB" # this can be set to -1 to automatically set as 1/32 of shared_buffers or 64kB, whichever is larger
      min_wal_size: 32MB
      max_wal_size: 64MB # default is 1GB
      max_slot_wal_keep_size: 128MB # default is -1, allowing unlimited wal growth when replicas fall behind

proxy:
  enabled: false
  pgBouncer:
    image: # it's not necessary to specify an image as the images specified in the Crunchy Postgres Operator will be pulled by default
    replicas: 1
    requests:
      cpu: 2m
      memory: 16Mi
    limits:
      memory: 64Mi
    pgbouncerConfig:
      requests:
        cpu: 1m
        memory: 16Mi
      limits:
        memory: 32Mi


# Postgres Cluster resource values:
pgmonitor:
  enabled: true #Can be true or false
  namespace: a781ec #The high level namespace of your project without the -tools -dev, etc part.
  exporter:
    image: # it's not necessary to specify an image as the images specified in the Crunchy Postgres Operator will be pulled by default
    requests:
      cpu: 10m
      memory: 64Mi
    limits:
      memory: 128Mi
