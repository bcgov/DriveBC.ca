x-function: &backend
  env_file: .env

  build:
    context: .
    dockerfile: ./compose/backend/Dockerfile
    args:
      DEBUG_BUILD: true

  volumes:
    - ./src/backend:/app/backend
    - ./src/images/webcams:/app/images/webcams
    - ./src/ReplayTheDay/json:/app/ReplayTheDay/json
    - ./src/ReplayTheDay/archive:/app/ReplayTheDay/archive
    - ./src/data/images:/app/data/images

  stdin_open: true
  tty: true
  depends_on:
    - db
    - redis

volumes:
  redis:
  postgres:
    driver: local
  minio-data:

services:
  django:
    <<: *backend
    container_name: django
    ports:
      - "8000:8000"
    command: /start.sh

  tasks:
    <<: *backend
    container_name: tasks
    command: /start_tasks.sh

  consumer:
    <<: *backend
    container_name: consumer
    command: /start_consumer.sh

  node:
    env_file: .env
    container_name: node
    build:
      context: ./
      dockerfile: ./compose/frontend/Dockerfile
      args:
        DEBUG_BUILD: true
        FONTAWESOME_PACKAGE_TOKEN: ${FONTAWESOME_PACKAGE_TOKEN}
    stdin_open: true
    tty: true
    ports:
      - "3000:3000"
    volumes:
      - ./src/frontend:/app
      # One-way volume to use node_modules from inside image
      - /app/node_modules
      - ./src/images/webcams:/app/images/webcams
    # depends_on:
    #   - django
    command: npm run start-frontend

  db:
    env_file: .env
    image: postgis/postgis:15-3.3-alpine
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: "redis:6.2"
    container_name: redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis:/data
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:latest
    # command: server /data
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio-data:/data